# function to simplify index selection and return simple list of only asigned indexes.
# min max are given for the specified indexes to act as default.
passIndSelectionSimplifier(min,max) 
if no inclusive ind, append at front *
if no inclusive ind or * create al ind:s for min-max-based range
exclude any excluded ind:s
return simplified


# function to simply category selection and their related indexes. handling exclusions and all-notation.
passSelectionSimplifier(cat-to-range-mapping)
if no inclusive cats, append at front *
if * in cats create al cats
exclude any excluded cats
gen inds using above function for each 
return simplified

prio: (top-down)
 1. cat
 2. ind

if no inclusive create list of everything.



run pass on:
 - remainder
 - result
 - original

<runOn>@pass (same linked to followed @lpass)

somehow allow "spiderweb" linking here to allow for a scenario like:

@pass spacer
1=result@pass keyword.operand
original@pass regex.cutting
result@pass keyword.literal
result:1@pass regex.keeping


Set fallback using command?

@fallback 0   /   @fallback "*"   /   @fallback 1,2   /   ...

These are set using same syntax as for passes.


Passing interpriter args/settings?

@opt ...

Any @opt is placed into a list containing the args, so:
`
@opt arg1 arg2
@opt arg3 arg4
`
Would be:
`
"options": [
    ["arg1", "arg2"],
    ["arg3", "arg4"]
]
`